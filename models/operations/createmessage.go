// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/jamelt/openai-api/models/components"
)

type CreateMessageRequest struct {
	// The ID of the [thread](/docs/api-reference/threads) to create a message for.
	ThreadID             string                          `pathParam:"style=simple,explode=false,name=thread_id"`
	CreateMessageRequest components.CreateMessageRequest `request:"mediaType=application/json"`
}

func (o *CreateMessageRequest) GetThreadID() string {
	if o == nil {
		return ""
	}
	return o.ThreadID
}

func (o *CreateMessageRequest) GetCreateMessageRequest() components.CreateMessageRequest {
	if o == nil {
		return components.CreateMessageRequest{}
	}
	return o.CreateMessageRequest
}

type CreateMessageResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	MessageObject *components.MessageObject
}

func (o *CreateMessageResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateMessageResponse) GetMessageObject() *components.MessageObject {
	if o == nil {
		return nil
	}
	return o.MessageObject
}
