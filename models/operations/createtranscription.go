// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/jamelt/openai-api/internal/utils"
	"github.com/jamelt/openai-api/models/components"
)

type CreateTranscriptionResponseBodyType string

const (
	CreateTranscriptionResponseBodyTypeCreateTranscriptionResponseJSON        CreateTranscriptionResponseBodyType = "CreateTranscriptionResponseJson"
	CreateTranscriptionResponseBodyTypeCreateTranscriptionResponseVerboseJSON CreateTranscriptionResponseBodyType = "CreateTranscriptionResponseVerboseJson"
)

// CreateTranscriptionResponseBody - OK
type CreateTranscriptionResponseBody struct {
	CreateTranscriptionResponseJSON        *components.CreateTranscriptionResponseJSON
	CreateTranscriptionResponseVerboseJSON *components.CreateTranscriptionResponseVerboseJSON

	Type CreateTranscriptionResponseBodyType
}

func CreateCreateTranscriptionResponseBodyCreateTranscriptionResponseJSON(createTranscriptionResponseJSON components.CreateTranscriptionResponseJSON) CreateTranscriptionResponseBody {
	typ := CreateTranscriptionResponseBodyTypeCreateTranscriptionResponseJSON

	return CreateTranscriptionResponseBody{
		CreateTranscriptionResponseJSON: &createTranscriptionResponseJSON,
		Type:                            typ,
	}
}

func CreateCreateTranscriptionResponseBodyCreateTranscriptionResponseVerboseJSON(createTranscriptionResponseVerboseJSON components.CreateTranscriptionResponseVerboseJSON) CreateTranscriptionResponseBody {
	typ := CreateTranscriptionResponseBodyTypeCreateTranscriptionResponseVerboseJSON

	return CreateTranscriptionResponseBody{
		CreateTranscriptionResponseVerboseJSON: &createTranscriptionResponseVerboseJSON,
		Type:                                   typ,
	}
}

func (u *CreateTranscriptionResponseBody) UnmarshalJSON(data []byte) error {

	var createTranscriptionResponseJSON components.CreateTranscriptionResponseJSON = components.CreateTranscriptionResponseJSON{}
	if err := utils.UnmarshalJSON(data, &createTranscriptionResponseJSON, "", true, true); err == nil {
		u.CreateTranscriptionResponseJSON = &createTranscriptionResponseJSON
		u.Type = CreateTranscriptionResponseBodyTypeCreateTranscriptionResponseJSON
		return nil
	}

	var createTranscriptionResponseVerboseJSON components.CreateTranscriptionResponseVerboseJSON = components.CreateTranscriptionResponseVerboseJSON{}
	if err := utils.UnmarshalJSON(data, &createTranscriptionResponseVerboseJSON, "", true, true); err == nil {
		u.CreateTranscriptionResponseVerboseJSON = &createTranscriptionResponseVerboseJSON
		u.Type = CreateTranscriptionResponseBodyTypeCreateTranscriptionResponseVerboseJSON
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CreateTranscriptionResponseBody", string(data))
}

func (u CreateTranscriptionResponseBody) MarshalJSON() ([]byte, error) {
	if u.CreateTranscriptionResponseJSON != nil {
		return utils.MarshalJSON(u.CreateTranscriptionResponseJSON, "", true)
	}

	if u.CreateTranscriptionResponseVerboseJSON != nil {
		return utils.MarshalJSON(u.CreateTranscriptionResponseVerboseJSON, "", true)
	}

	return nil, errors.New("could not marshal union type CreateTranscriptionResponseBody: all fields are null")
}

type CreateTranscriptionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	OneOf *CreateTranscriptionResponseBody
}

func (o *CreateTranscriptionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateTranscriptionResponse) GetOneOf() *CreateTranscriptionResponseBody {
	if o == nil {
		return nil
	}
	return o.OneOf
}
