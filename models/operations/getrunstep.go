// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/jamelt/openai-api/models/components"
)

type GetRunStepQueryParamInclude string

const (
	GetRunStepQueryParamIncludeStepDetailsToolCallsWildcardFileSearchResultsWildcardContent GetRunStepQueryParamInclude = "step_details.tool_calls[*].file_search.results[*].content"
)

func (e GetRunStepQueryParamInclude) ToPointer() *GetRunStepQueryParamInclude {
	return &e
}
func (e *GetRunStepQueryParamInclude) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "step_details.tool_calls[*].file_search.results[*].content":
		*e = GetRunStepQueryParamInclude(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRunStepQueryParamInclude: %v", v)
	}
}

type GetRunStepRequest struct {
	// The ID of the thread to which the run and run step belongs.
	ThreadID string `pathParam:"style=simple,explode=false,name=thread_id"`
	// The ID of the run to which the run step belongs.
	RunID string `pathParam:"style=simple,explode=false,name=run_id"`
	// The ID of the run step to retrieve.
	StepID string `pathParam:"style=simple,explode=false,name=step_id"`
	// A list of additional fields to include in the response. Currently the only supported value is `step_details.tool_calls[*].file_search.results[*].content` to fetch the file search result content.
	//
	// See the [file search tool documentation](/docs/assistants/tools/file-search#customizing-file-search-settings) for more information.
	//
	Include []GetRunStepQueryParamInclude `queryParam:"style=form,explode=true,name=include[]"`
}

func (o *GetRunStepRequest) GetThreadID() string {
	if o == nil {
		return ""
	}
	return o.ThreadID
}

func (o *GetRunStepRequest) GetRunID() string {
	if o == nil {
		return ""
	}
	return o.RunID
}

func (o *GetRunStepRequest) GetStepID() string {
	if o == nil {
		return ""
	}
	return o.StepID
}

func (o *GetRunStepRequest) GetInclude() []GetRunStepQueryParamInclude {
	if o == nil {
		return nil
	}
	return o.Include
}

type GetRunStepResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	RunStepObject *components.RunStepObject
}

func (o *GetRunStepResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetRunStepResponse) GetRunStepObject() *components.RunStepObject {
	if o == nil {
		return nil
	}
	return o.RunStepObject
}
