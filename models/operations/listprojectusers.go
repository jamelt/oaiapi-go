// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/jamelt/openai-api/internal/utils"
	"github.com/jamelt/openai-api/models/components"
)

type ListProjectUsersRequest struct {
	// The ID of the project.
	ProjectID string `pathParam:"style=simple,explode=false,name=project_id"`
	// A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.
	//
	Limit *int64 `default:"20" queryParam:"style=form,explode=true,name=limit"`
	// A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.
	//
	After *string `queryParam:"style=form,explode=true,name=after"`
}

func (l ListProjectUsersRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListProjectUsersRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListProjectUsersRequest) GetProjectID() string {
	if o == nil {
		return ""
	}
	return o.ProjectID
}

func (o *ListProjectUsersRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListProjectUsersRequest) GetAfter() *string {
	if o == nil {
		return nil
	}
	return o.After
}

type ListProjectUsersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Project users listed successfully.
	ProjectUserListResponse *components.ProjectUserListResponse
}

func (o *ListProjectUsersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListProjectUsersResponse) GetProjectUserListResponse() *components.ProjectUserListResponse {
	if o == nil {
		return nil
	}
	return o.ProjectUserListResponse
}
