// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ChatCompletionResponseMessageRole - The role of the author of this message.
type ChatCompletionResponseMessageRole string

const (
	ChatCompletionResponseMessageRoleAssistant ChatCompletionResponseMessageRole = "assistant"
)

func (e ChatCompletionResponseMessageRole) ToPointer() *ChatCompletionResponseMessageRole {
	return &e
}
func (e *ChatCompletionResponseMessageRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "assistant":
		*e = ChatCompletionResponseMessageRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChatCompletionResponseMessageRole: %v", v)
	}
}

// ChatCompletionResponseMessageFunctionCall - Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
//
// Deprecated type: This will be removed in a future release, please migrate away from it as soon as possible.
type ChatCompletionResponseMessageFunctionCall struct {
	// The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
	Arguments string `json:"arguments"`
	// The name of the function to call.
	Name string `json:"name"`
}

func (o *ChatCompletionResponseMessageFunctionCall) GetArguments() string {
	if o == nil {
		return ""
	}
	return o.Arguments
}

func (o *ChatCompletionResponseMessageFunctionCall) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

// ChatCompletionResponseMessageAudio - If the audio output modality is requested, this object contains data
// about the audio response from the model. [Learn more](/docs/guides/audio).
type ChatCompletionResponseMessageAudio struct {
	// Unique identifier for this audio response.
	ID string `json:"id"`
	// The Unix timestamp (in seconds) for when this audio response will
	// no longer be accessible on the server for use in multi-turn
	// conversations.
	//
	ExpiresAt int64 `json:"expires_at"`
	// Base64 encoded audio bytes generated by the model, in the format
	// specified in the request.
	//
	Data string `json:"data"`
	// Transcript of the audio generated by the model.
	Transcript string `json:"transcript"`
}

func (o *ChatCompletionResponseMessageAudio) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ChatCompletionResponseMessageAudio) GetExpiresAt() int64 {
	if o == nil {
		return 0
	}
	return o.ExpiresAt
}

func (o *ChatCompletionResponseMessageAudio) GetData() string {
	if o == nil {
		return ""
	}
	return o.Data
}

func (o *ChatCompletionResponseMessageAudio) GetTranscript() string {
	if o == nil {
		return ""
	}
	return o.Transcript
}

// ChatCompletionResponseMessage - A chat completion message generated by the model.
type ChatCompletionResponseMessage struct {
	// The contents of the message.
	Content *string `json:"content"`
	// The refusal message generated by the model.
	Refusal *string `json:"refusal"`
	// The tool calls generated by the model, such as function calls.
	ToolCalls []ChatCompletionMessageToolCall `json:"tool_calls,omitempty"`
	// The role of the author of this message.
	Role ChatCompletionResponseMessageRole `json:"role"`
	// Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
	//
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	FunctionCall *ChatCompletionResponseMessageFunctionCall `json:"function_call,omitempty"`
	// If the audio output modality is requested, this object contains data
	// about the audio response from the model. [Learn more](/docs/guides/audio).
	//
	Audio *ChatCompletionResponseMessageAudio `json:"audio,omitempty"`
}

func (o *ChatCompletionResponseMessage) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *ChatCompletionResponseMessage) GetRefusal() *string {
	if o == nil {
		return nil
	}
	return o.Refusal
}

func (o *ChatCompletionResponseMessage) GetToolCalls() []ChatCompletionMessageToolCall {
	if o == nil {
		return nil
	}
	return o.ToolCalls
}

func (o *ChatCompletionResponseMessage) GetRole() ChatCompletionResponseMessageRole {
	if o == nil {
		return ChatCompletionResponseMessageRole("")
	}
	return o.Role
}

func (o *ChatCompletionResponseMessage) GetFunctionCall() *ChatCompletionResponseMessageFunctionCall {
	if o == nil {
		return nil
	}
	return o.FunctionCall
}

func (o *ChatCompletionResponseMessage) GetAudio() *ChatCompletionResponseMessageAudio {
	if o == nil {
		return nil
	}
	return o.Audio
}
