// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// InviteDeleteResponseObject - The object type, which is always `organization.invite.deleted`
type InviteDeleteResponseObject string

const (
	InviteDeleteResponseObjectOrganizationInviteDeleted InviteDeleteResponseObject = "organization.invite.deleted"
)

func (e InviteDeleteResponseObject) ToPointer() *InviteDeleteResponseObject {
	return &e
}
func (e *InviteDeleteResponseObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "organization.invite.deleted":
		*e = InviteDeleteResponseObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InviteDeleteResponseObject: %v", v)
	}
}

type InviteDeleteResponse struct {
	// The object type, which is always `organization.invite.deleted`
	Object  InviteDeleteResponseObject `json:"object"`
	ID      string                     `json:"id"`
	Deleted bool                       `json:"deleted"`
}

func (o *InviteDeleteResponse) GetObject() InviteDeleteResponseObject {
	if o == nil {
		return InviteDeleteResponseObject("")
	}
	return o.Object
}

func (o *InviteDeleteResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *InviteDeleteResponse) GetDeleted() bool {
	if o == nil {
		return false
	}
	return o.Deleted
}
