// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// MessageContentRefusalObjectType - Always `refusal`.
type MessageContentRefusalObjectType string

const (
	MessageContentRefusalObjectTypeRefusal MessageContentRefusalObjectType = "refusal"
)

func (e MessageContentRefusalObjectType) ToPointer() *MessageContentRefusalObjectType {
	return &e
}
func (e *MessageContentRefusalObjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "refusal":
		*e = MessageContentRefusalObjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageContentRefusalObjectType: %v", v)
	}
}

// MessageContentRefusalObject - The refusal content generated by the assistant.
type MessageContentRefusalObject struct {
	// Always `refusal`.
	Type    MessageContentRefusalObjectType `json:"type"`
	Refusal string                          `json:"refusal"`
}

func (o *MessageContentRefusalObject) GetType() MessageContentRefusalObjectType {
	if o == nil {
		return MessageContentRefusalObjectType("")
	}
	return o.Type
}

func (o *MessageContentRefusalObject) GetRefusal() string {
	if o == nil {
		return ""
	}
	return o.Refusal
}
