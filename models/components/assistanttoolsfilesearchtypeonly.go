// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// AssistantToolsFileSearchTypeOnlyType - The type of tool being defined: `file_search`
type AssistantToolsFileSearchTypeOnlyType string

const (
	AssistantToolsFileSearchTypeOnlyTypeFileSearch AssistantToolsFileSearchTypeOnlyType = "file_search"
)

func (e AssistantToolsFileSearchTypeOnlyType) ToPointer() *AssistantToolsFileSearchTypeOnlyType {
	return &e
}
func (e *AssistantToolsFileSearchTypeOnlyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "file_search":
		*e = AssistantToolsFileSearchTypeOnlyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssistantToolsFileSearchTypeOnlyType: %v", v)
	}
}

type AssistantToolsFileSearchTypeOnly struct {
	// The type of tool being defined: `file_search`
	Type AssistantToolsFileSearchTypeOnlyType `json:"type"`
}

func (o *AssistantToolsFileSearchTypeOnly) GetType() AssistantToolsFileSearchTypeOnlyType {
	if o == nil {
		return AssistantToolsFileSearchTypeOnlyType("")
	}
	return o.Type
}
