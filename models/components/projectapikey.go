// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ProjectAPIKeyObject - The object type, which is always `organization.project.api_key`
type ProjectAPIKeyObject string

const (
	ProjectAPIKeyObjectOrganizationProjectAPIKey ProjectAPIKeyObject = "organization.project.api_key"
)

func (e ProjectAPIKeyObject) ToPointer() *ProjectAPIKeyObject {
	return &e
}
func (e *ProjectAPIKeyObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "organization.project.api_key":
		*e = ProjectAPIKeyObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectAPIKeyObject: %v", v)
	}
}

// ProjectAPIKeyType - `user` or `service_account`
type ProjectAPIKeyType string

const (
	ProjectAPIKeyTypeUser           ProjectAPIKeyType = "user"
	ProjectAPIKeyTypeServiceAccount ProjectAPIKeyType = "service_account"
)

func (e ProjectAPIKeyType) ToPointer() *ProjectAPIKeyType {
	return &e
}
func (e *ProjectAPIKeyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "user":
		fallthrough
	case "service_account":
		*e = ProjectAPIKeyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectAPIKeyType: %v", v)
	}
}

type Owner struct {
	// `user` or `service_account`
	Type *ProjectAPIKeyType `json:"type,omitempty"`
	// Represents an individual user in a project.
	User *ProjectUser `json:"user,omitempty"`
	// Represents an individual service account in a project.
	ServiceAccount *ProjectServiceAccount `json:"service_account,omitempty"`
}

func (o *Owner) GetType() *ProjectAPIKeyType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *Owner) GetUser() *ProjectUser {
	if o == nil {
		return nil
	}
	return o.User
}

func (o *Owner) GetServiceAccount() *ProjectServiceAccount {
	if o == nil {
		return nil
	}
	return o.ServiceAccount
}

// ProjectAPIKey - Represents an individual API key in a project.
type ProjectAPIKey struct {
	// The object type, which is always `organization.project.api_key`
	Object ProjectAPIKeyObject `json:"object"`
	// The redacted value of the API key
	RedactedValue string `json:"redacted_value"`
	// The name of the API key
	Name string `json:"name"`
	// The Unix timestamp (in seconds) of when the API key was created
	CreatedAt int64 `json:"created_at"`
	// The identifier, which can be referenced in API endpoints
	ID    string `json:"id"`
	Owner Owner  `json:"owner"`
}

func (o *ProjectAPIKey) GetObject() ProjectAPIKeyObject {
	if o == nil {
		return ProjectAPIKeyObject("")
	}
	return o.Object
}

func (o *ProjectAPIKey) GetRedactedValue() string {
	if o == nil {
		return ""
	}
	return o.RedactedValue
}

func (o *ProjectAPIKey) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ProjectAPIKey) GetCreatedAt() int64 {
	if o == nil {
		return 0
	}
	return o.CreatedAt
}

func (o *ProjectAPIKey) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ProjectAPIKey) GetOwner() Owner {
	if o == nil {
		return Owner{}
	}
	return o.Owner
}
