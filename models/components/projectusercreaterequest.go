// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ProjectUserCreateRequestRole - `owner` or `member`
type ProjectUserCreateRequestRole string

const (
	ProjectUserCreateRequestRoleOwner  ProjectUserCreateRequestRole = "owner"
	ProjectUserCreateRequestRoleMember ProjectUserCreateRequestRole = "member"
)

func (e ProjectUserCreateRequestRole) ToPointer() *ProjectUserCreateRequestRole {
	return &e
}
func (e *ProjectUserCreateRequestRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "owner":
		fallthrough
	case "member":
		*e = ProjectUserCreateRequestRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectUserCreateRequestRole: %v", v)
	}
}

type ProjectUserCreateRequest struct {
	// The ID of the user.
	UserID string `json:"user_id"`
	// `owner` or `member`
	Role ProjectUserCreateRequestRole `json:"role"`
}

func (o *ProjectUserCreateRequest) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *ProjectUserCreateRequest) GetRole() ProjectUserCreateRequestRole {
	if o == nil {
		return ProjectUserCreateRequestRole("")
	}
	return o.Role
}
