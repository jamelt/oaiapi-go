// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// AssistantToolsFileSearchType - The type of tool being defined: `file_search`
type AssistantToolsFileSearchType string

const (
	AssistantToolsFileSearchTypeFileSearch AssistantToolsFileSearchType = "file_search"
)

func (e AssistantToolsFileSearchType) ToPointer() *AssistantToolsFileSearchType {
	return &e
}
func (e *AssistantToolsFileSearchType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "file_search":
		*e = AssistantToolsFileSearchType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssistantToolsFileSearchType: %v", v)
	}
}

// FileSearch - Overrides for the file search tool.
type FileSearch struct {
	// The maximum number of results the file search tool should output. The default is 20 for `gpt-4*` models and 5 for `gpt-3.5-turbo`. This number should be between 1 and 50 inclusive.
	//
	// Note that the file search tool may output fewer than `max_num_results` results. See the [file search tool documentation](/docs/assistants/tools/file-search#customizing-file-search-settings) for more information.
	//
	MaxNumResults *int64 `json:"max_num_results,omitempty"`
	// The ranking options for the file search. If not specified, the file search tool will use the `auto` ranker and a score_threshold of 0.
	//
	// See the [file search tool documentation](/docs/assistants/tools/file-search#customizing-file-search-settings) for more information.
	//
	RankingOptions *FileSearchRankingOptions `json:"ranking_options,omitempty"`
}

func (o *FileSearch) GetMaxNumResults() *int64 {
	if o == nil {
		return nil
	}
	return o.MaxNumResults
}

func (o *FileSearch) GetRankingOptions() *FileSearchRankingOptions {
	if o == nil {
		return nil
	}
	return o.RankingOptions
}

type AssistantToolsFileSearch struct {
	// The type of tool being defined: `file_search`
	Type AssistantToolsFileSearchType `json:"type"`
	// Overrides for the file search tool.
	FileSearch *FileSearch `json:"file_search,omitempty"`
}

func (o *AssistantToolsFileSearch) GetType() AssistantToolsFileSearchType {
	if o == nil {
		return AssistantToolsFileSearchType("")
	}
	return o.Type
}

func (o *AssistantToolsFileSearch) GetFileSearch() *FileSearch {
	if o == nil {
		return nil
	}
	return o.FileSearch
}
