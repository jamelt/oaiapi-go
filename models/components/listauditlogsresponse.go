// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ListAuditLogsResponseObject string

const (
	ListAuditLogsResponseObjectList ListAuditLogsResponseObject = "list"
)

func (e ListAuditLogsResponseObject) ToPointer() *ListAuditLogsResponseObject {
	return &e
}
func (e *ListAuditLogsResponseObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "list":
		*e = ListAuditLogsResponseObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAuditLogsResponseObject: %v", v)
	}
}

type ListAuditLogsResponse struct {
	Object  ListAuditLogsResponseObject `json:"object"`
	Data    []AuditLog                  `json:"data"`
	FirstID string                      `json:"first_id"`
	LastID  string                      `json:"last_id"`
	HasMore bool                        `json:"has_more"`
}

func (o *ListAuditLogsResponse) GetObject() ListAuditLogsResponseObject {
	if o == nil {
		return ListAuditLogsResponseObject("")
	}
	return o.Object
}

func (o *ListAuditLogsResponse) GetData() []AuditLog {
	if o == nil {
		return []AuditLog{}
	}
	return o.Data
}

func (o *ListAuditLogsResponse) GetFirstID() string {
	if o == nil {
		return ""
	}
	return o.FirstID
}

func (o *ListAuditLogsResponse) GetLastID() string {
	if o == nil {
		return ""
	}
	return o.LastID
}

func (o *ListAuditLogsResponse) GetHasMore() bool {
	if o == nil {
		return false
	}
	return o.HasMore
}
