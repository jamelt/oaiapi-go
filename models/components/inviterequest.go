// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// InviteRequestRole - `owner` or `reader`
type InviteRequestRole string

const (
	InviteRequestRoleReader InviteRequestRole = "reader"
	InviteRequestRoleOwner  InviteRequestRole = "owner"
)

func (e InviteRequestRole) ToPointer() *InviteRequestRole {
	return &e
}
func (e *InviteRequestRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "reader":
		fallthrough
	case "owner":
		*e = InviteRequestRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InviteRequestRole: %v", v)
	}
}

type InviteRequest struct {
	// Send an email to this address
	Email string `json:"email"`
	// `owner` or `reader`
	Role InviteRequestRole `json:"role"`
}

func (o *InviteRequest) GetEmail() string {
	if o == nil {
		return ""
	}
	return o.Email
}

func (o *InviteRequest) GetRole() InviteRequestRole {
	if o == nil {
		return InviteRequestRole("")
	}
	return o.Role
}
