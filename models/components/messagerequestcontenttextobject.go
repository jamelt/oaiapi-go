// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// MessageRequestContentTextObjectType - Always `text`.
type MessageRequestContentTextObjectType string

const (
	MessageRequestContentTextObjectTypeText MessageRequestContentTextObjectType = "text"
)

func (e MessageRequestContentTextObjectType) ToPointer() *MessageRequestContentTextObjectType {
	return &e
}
func (e *MessageRequestContentTextObjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = MessageRequestContentTextObjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageRequestContentTextObjectType: %v", v)
	}
}

// MessageRequestContentTextObject - The text content that is part of a message.
type MessageRequestContentTextObject struct {
	// Always `text`.
	Type MessageRequestContentTextObjectType `json:"type"`
	// Text content to be sent to the model
	Text string `json:"text"`
}

func (o *MessageRequestContentTextObject) GetType() MessageRequestContentTextObjectType {
	if o == nil {
		return MessageRequestContentTextObjectType("")
	}
	return o.Type
}

func (o *MessageRequestContentTextObject) GetText() string {
	if o == nil {
		return ""
	}
	return o.Text
}
