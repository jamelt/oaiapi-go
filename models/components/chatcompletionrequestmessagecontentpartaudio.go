// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ChatCompletionRequestMessageContentPartAudioType - The type of the content part. Always `input_audio`.
type ChatCompletionRequestMessageContentPartAudioType string

const (
	ChatCompletionRequestMessageContentPartAudioTypeInputAudio ChatCompletionRequestMessageContentPartAudioType = "input_audio"
)

func (e ChatCompletionRequestMessageContentPartAudioType) ToPointer() *ChatCompletionRequestMessageContentPartAudioType {
	return &e
}
func (e *ChatCompletionRequestMessageContentPartAudioType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "input_audio":
		*e = ChatCompletionRequestMessageContentPartAudioType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChatCompletionRequestMessageContentPartAudioType: %v", v)
	}
}

// Format - The format of the encoded audio data. Currently supports "wav" and "mp3".
type Format string

const (
	FormatWav Format = "wav"
	FormatMp3 Format = "mp3"
)

func (e Format) ToPointer() *Format {
	return &e
}
func (e *Format) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "wav":
		fallthrough
	case "mp3":
		*e = Format(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Format: %v", v)
	}
}

type InputAudio struct {
	// Base64 encoded audio data.
	Data string `json:"data"`
	// The format of the encoded audio data. Currently supports "wav" and "mp3".
	//
	Format Format `json:"format"`
}

func (o *InputAudio) GetData() string {
	if o == nil {
		return ""
	}
	return o.Data
}

func (o *InputAudio) GetFormat() Format {
	if o == nil {
		return Format("")
	}
	return o.Format
}

// ChatCompletionRequestMessageContentPartAudio - Learn about [audio inputs](/docs/guides/audio).
type ChatCompletionRequestMessageContentPartAudio struct {
	// The type of the content part. Always `input_audio`.
	Type       ChatCompletionRequestMessageContentPartAudioType `json:"type"`
	InputAudio InputAudio                                       `json:"input_audio"`
}

func (o *ChatCompletionRequestMessageContentPartAudio) GetType() ChatCompletionRequestMessageContentPartAudioType {
	if o == nil {
		return ChatCompletionRequestMessageContentPartAudioType("")
	}
	return o.Type
}

func (o *ChatCompletionRequestMessageContentPartAudio) GetInputAudio() InputAudio {
	if o == nil {
		return InputAudio{}
	}
	return o.InputAudio
}
