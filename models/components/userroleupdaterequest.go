// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// UserRoleUpdateRequestRole - `owner` or `reader`
type UserRoleUpdateRequestRole string

const (
	UserRoleUpdateRequestRoleOwner  UserRoleUpdateRequestRole = "owner"
	UserRoleUpdateRequestRoleReader UserRoleUpdateRequestRole = "reader"
)

func (e UserRoleUpdateRequestRole) ToPointer() *UserRoleUpdateRequestRole {
	return &e
}
func (e *UserRoleUpdateRequestRole) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "owner":
		fallthrough
	case "reader":
		*e = UserRoleUpdateRequestRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserRoleUpdateRequestRole: %v", v)
	}
}

type UserRoleUpdateRequest struct {
	// `owner` or `reader`
	Role UserRoleUpdateRequestRole `json:"role"`
}

func (o *UserRoleUpdateRequest) GetRole() UserRoleUpdateRequestRole {
	if o == nil {
		return UserRoleUpdateRequestRole("")
	}
	return o.Role
}
