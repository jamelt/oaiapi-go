// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// RunStepDetailsToolCallsFileSearchResultObjectType - The type of the content.
type RunStepDetailsToolCallsFileSearchResultObjectType string

const (
	RunStepDetailsToolCallsFileSearchResultObjectTypeText RunStepDetailsToolCallsFileSearchResultObjectType = "text"
)

func (e RunStepDetailsToolCallsFileSearchResultObjectType) ToPointer() *RunStepDetailsToolCallsFileSearchResultObjectType {
	return &e
}
func (e *RunStepDetailsToolCallsFileSearchResultObjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		*e = RunStepDetailsToolCallsFileSearchResultObjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RunStepDetailsToolCallsFileSearchResultObjectType: %v", v)
	}
}

type RunStepDetailsToolCallsFileSearchResultObjectContent struct {
	// The type of the content.
	Type *RunStepDetailsToolCallsFileSearchResultObjectType `json:"type,omitempty"`
	// The text content of the file.
	Text *string `json:"text,omitempty"`
}

func (o *RunStepDetailsToolCallsFileSearchResultObjectContent) GetType() *RunStepDetailsToolCallsFileSearchResultObjectType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *RunStepDetailsToolCallsFileSearchResultObjectContent) GetText() *string {
	if o == nil {
		return nil
	}
	return o.Text
}

// RunStepDetailsToolCallsFileSearchResultObject - A result instance of the file search.
type RunStepDetailsToolCallsFileSearchResultObject struct {
	// The ID of the file that result was found in.
	FileID string `json:"file_id"`
	// The name of the file that result was found in.
	FileName string `json:"file_name"`
	// The score of the result. All values must be a floating point number between 0 and 1.
	Score float64 `json:"score"`
	// The content of the result that was found. The content is only included if requested via the include query parameter.
	Content []RunStepDetailsToolCallsFileSearchResultObjectContent `json:"content,omitempty"`
}

func (o *RunStepDetailsToolCallsFileSearchResultObject) GetFileID() string {
	if o == nil {
		return ""
	}
	return o.FileID
}

func (o *RunStepDetailsToolCallsFileSearchResultObject) GetFileName() string {
	if o == nil {
		return ""
	}
	return o.FileName
}

func (o *RunStepDetailsToolCallsFileSearchResultObject) GetScore() float64 {
	if o == nil {
		return 0.0
	}
	return o.Score
}

func (o *RunStepDetailsToolCallsFileSearchResultObject) GetContent() []RunStepDetailsToolCallsFileSearchResultObjectContent {
	if o == nil {
		return nil
	}
	return o.Content
}
