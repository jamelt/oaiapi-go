// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ProjectAPIKeyDeleteResponseObject string

const (
	ProjectAPIKeyDeleteResponseObjectOrganizationProjectAPIKeyDeleted ProjectAPIKeyDeleteResponseObject = "organization.project.api_key.deleted"
)

func (e ProjectAPIKeyDeleteResponseObject) ToPointer() *ProjectAPIKeyDeleteResponseObject {
	return &e
}
func (e *ProjectAPIKeyDeleteResponseObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "organization.project.api_key.deleted":
		*e = ProjectAPIKeyDeleteResponseObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectAPIKeyDeleteResponseObject: %v", v)
	}
}

type ProjectAPIKeyDeleteResponse struct {
	Object  ProjectAPIKeyDeleteResponseObject `json:"object"`
	ID      string                            `json:"id"`
	Deleted bool                              `json:"deleted"`
}

func (o *ProjectAPIKeyDeleteResponse) GetObject() ProjectAPIKeyDeleteResponseObject {
	if o == nil {
		return ProjectAPIKeyDeleteResponseObject("")
	}
	return o.Object
}

func (o *ProjectAPIKeyDeleteResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ProjectAPIKeyDeleteResponse) GetDeleted() bool {
	if o == nil {
		return false
	}
	return o.Deleted
}
