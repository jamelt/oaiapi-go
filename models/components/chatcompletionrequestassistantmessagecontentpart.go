// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/jamelt/openai-api/internal/utils"
)

type ChatCompletionRequestAssistantMessageContentPartType string

const (
	ChatCompletionRequestAssistantMessageContentPartTypeChatCompletionRequestMessageContentPartText    ChatCompletionRequestAssistantMessageContentPartType = "ChatCompletionRequestMessageContentPartText"
	ChatCompletionRequestAssistantMessageContentPartTypeChatCompletionRequestMessageContentPartRefusal ChatCompletionRequestAssistantMessageContentPartType = "ChatCompletionRequestMessageContentPartRefusal"
)

type ChatCompletionRequestAssistantMessageContentPart struct {
	ChatCompletionRequestMessageContentPartText    *ChatCompletionRequestMessageContentPartText
	ChatCompletionRequestMessageContentPartRefusal *ChatCompletionRequestMessageContentPartRefusal

	Type ChatCompletionRequestAssistantMessageContentPartType
}

func CreateChatCompletionRequestAssistantMessageContentPartChatCompletionRequestMessageContentPartText(chatCompletionRequestMessageContentPartText ChatCompletionRequestMessageContentPartText) ChatCompletionRequestAssistantMessageContentPart {
	typ := ChatCompletionRequestAssistantMessageContentPartTypeChatCompletionRequestMessageContentPartText

	return ChatCompletionRequestAssistantMessageContentPart{
		ChatCompletionRequestMessageContentPartText: &chatCompletionRequestMessageContentPartText,
		Type: typ,
	}
}

func CreateChatCompletionRequestAssistantMessageContentPartChatCompletionRequestMessageContentPartRefusal(chatCompletionRequestMessageContentPartRefusal ChatCompletionRequestMessageContentPartRefusal) ChatCompletionRequestAssistantMessageContentPart {
	typ := ChatCompletionRequestAssistantMessageContentPartTypeChatCompletionRequestMessageContentPartRefusal

	return ChatCompletionRequestAssistantMessageContentPart{
		ChatCompletionRequestMessageContentPartRefusal: &chatCompletionRequestMessageContentPartRefusal,
		Type: typ,
	}
}

func (u *ChatCompletionRequestAssistantMessageContentPart) UnmarshalJSON(data []byte) error {

	var chatCompletionRequestMessageContentPartText ChatCompletionRequestMessageContentPartText = ChatCompletionRequestMessageContentPartText{}
	if err := utils.UnmarshalJSON(data, &chatCompletionRequestMessageContentPartText, "", true, true); err == nil {
		u.ChatCompletionRequestMessageContentPartText = &chatCompletionRequestMessageContentPartText
		u.Type = ChatCompletionRequestAssistantMessageContentPartTypeChatCompletionRequestMessageContentPartText
		return nil
	}

	var chatCompletionRequestMessageContentPartRefusal ChatCompletionRequestMessageContentPartRefusal = ChatCompletionRequestMessageContentPartRefusal{}
	if err := utils.UnmarshalJSON(data, &chatCompletionRequestMessageContentPartRefusal, "", true, true); err == nil {
		u.ChatCompletionRequestMessageContentPartRefusal = &chatCompletionRequestMessageContentPartRefusal
		u.Type = ChatCompletionRequestAssistantMessageContentPartTypeChatCompletionRequestMessageContentPartRefusal
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ChatCompletionRequestAssistantMessageContentPart", string(data))
}

func (u ChatCompletionRequestAssistantMessageContentPart) MarshalJSON() ([]byte, error) {
	if u.ChatCompletionRequestMessageContentPartText != nil {
		return utils.MarshalJSON(u.ChatCompletionRequestMessageContentPartText, "", true)
	}

	if u.ChatCompletionRequestMessageContentPartRefusal != nil {
		return utils.MarshalJSON(u.ChatCompletionRequestMessageContentPartRefusal, "", true)
	}

	return nil, errors.New("could not marshal union type ChatCompletionRequestAssistantMessageContentPart: all fields are null")
}
