// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// OtherChunkingStrategyResponseParamType - Always `other`.
type OtherChunkingStrategyResponseParamType string

const (
	OtherChunkingStrategyResponseParamTypeOther OtherChunkingStrategyResponseParamType = "other"
)

func (e OtherChunkingStrategyResponseParamType) ToPointer() *OtherChunkingStrategyResponseParamType {
	return &e
}
func (e *OtherChunkingStrategyResponseParamType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "other":
		*e = OtherChunkingStrategyResponseParamType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OtherChunkingStrategyResponseParamType: %v", v)
	}
}

// OtherChunkingStrategyResponseParam - This is returned when the chunking strategy is unknown. Typically, this is because the file was indexed before the `chunking_strategy` concept was introduced in the API.
type OtherChunkingStrategyResponseParam struct {
	// Always `other`.
	Type OtherChunkingStrategyResponseParamType `json:"type"`
}

func (o *OtherChunkingStrategyResponseParam) GetType() OtherChunkingStrategyResponseParamType {
	if o == nil {
		return OtherChunkingStrategyResponseParamType("")
	}
	return o.Type
}
