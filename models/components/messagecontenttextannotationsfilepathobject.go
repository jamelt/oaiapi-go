// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// MessageContentTextAnnotationsFilePathObjectType - Always `file_path`.
type MessageContentTextAnnotationsFilePathObjectType string

const (
	MessageContentTextAnnotationsFilePathObjectTypeFilePath MessageContentTextAnnotationsFilePathObjectType = "file_path"
)

func (e MessageContentTextAnnotationsFilePathObjectType) ToPointer() *MessageContentTextAnnotationsFilePathObjectType {
	return &e
}
func (e *MessageContentTextAnnotationsFilePathObjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "file_path":
		*e = MessageContentTextAnnotationsFilePathObjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageContentTextAnnotationsFilePathObjectType: %v", v)
	}
}

type FilePath struct {
	// The ID of the file that was generated.
	FileID string `json:"file_id"`
}

func (o *FilePath) GetFileID() string {
	if o == nil {
		return ""
	}
	return o.FileID
}

// MessageContentTextAnnotationsFilePathObject - A URL for the file that's generated when the assistant used the `code_interpreter` tool to generate a file.
type MessageContentTextAnnotationsFilePathObject struct {
	// Always `file_path`.
	Type MessageContentTextAnnotationsFilePathObjectType `json:"type"`
	// The text in the message content that needs to be replaced.
	Text       string   `json:"text"`
	FilePath   FilePath `json:"file_path"`
	StartIndex int64    `json:"start_index"`
	EndIndex   int64    `json:"end_index"`
}

func (o *MessageContentTextAnnotationsFilePathObject) GetType() MessageContentTextAnnotationsFilePathObjectType {
	if o == nil {
		return MessageContentTextAnnotationsFilePathObjectType("")
	}
	return o.Type
}

func (o *MessageContentTextAnnotationsFilePathObject) GetText() string {
	if o == nil {
		return ""
	}
	return o.Text
}

func (o *MessageContentTextAnnotationsFilePathObject) GetFilePath() FilePath {
	if o == nil {
		return FilePath{}
	}
	return o.FilePath
}

func (o *MessageContentTextAnnotationsFilePathObject) GetStartIndex() int64 {
	if o == nil {
		return 0
	}
	return o.StartIndex
}

func (o *MessageContentTextAnnotationsFilePathObject) GetEndIndex() int64 {
	if o == nil {
		return 0
	}
	return o.EndIndex
}
